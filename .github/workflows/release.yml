name: release

concurrency:
  group: release-${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - '**/v[0-9]+.[0-9]+.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  generate:
    runs-on: ubuntu-latest
    name: Generate
    outputs:
      crate: ${{ steps.parse-ref.outputs.crate }}
      version: ${{ steps.parse-ref.outputs.version }}
    steps:
      - id: parse-ref
        run: |
          echo "CRATE=$(cut -d/ -f1 <<<"${GITHUB_REF#refs/*/}")" >> $GITHUB_OUTPUT
          echo "VERSION=$(cut -d/ -f2 <<<"${GITHUB_REF#refs/*/}")" >> $GITHUB_OUTPUT

  build:
    needs:
      - generate
    strategy:
      matrix:
        os: ["ubuntu-20.04", "ubuntu-22.04"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: Swatinem/rust-cache@v2
      - name: "check cgroup version"
        run: "mount | grep cgroup"
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Setup WasmEdge build env
        run: |
          curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash -s -- --version=0.11.2
          echo "LD_LIBRARY_PATH=$HOME/.wasmedge/lib" >> $GITHUB_ENV
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --verbose
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --verbose --package ${{ needs.generate.outputs.crate }}

  release:
    permissions:
      contents: write
    needs:
      - build
      - generate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup buildx
        run: docker buildx create --use
      - name: build binaries
        run: docker buildx bake --set *.cache-from=type=gha --set *.cache-to=type=gha release-tars
        env:
          CRATE: ${{ needs.generate.outputs.crate }}
      - name: upload binary as GitHub artifact
        uses: actions/upload-artifact@v3
        with:
          path: release/
          name: ${{ needs.generate.outputs.crate }}-${{ needs.generate.outputs.version }}
      - name: linux/amd64 - upload to GitHub release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/linux_amd64/*
          file_glob: true
          asset_name: ${{ needs.generate.outputs.crate }}-${{ needs.generate.outputs.version }}-linux-amd64
          overwrite: true
          prerelease: true
          tag: ${{ github.ref }}
          body: Release of ${{ needs.generate.outputs.crate }} ${{ needs.generate.outputs.version }}
      - name: linux/arm64 - upload to GitHub release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/linux_arm64/*
          file_glob: true
          asset_name: ${{ needs.generate.outputs.crate }}-${{ needs.generate.outputs.version }}-linux-arm64
          overwrite: true
          prerelease: true
          tag: ${{ github.ref }}
          body: Release of ${{ needs.generate.outputs.crate }} ${{ needs.generate.outputs.version }}


